[{"C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\index.js":"1","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\reportWebVitals.js":"2","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\App.js":"3","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\component\\Toolbar\\Toolbar.jsx":"4","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\component\\UnitsMaterial\\Unit.jsx":"5","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\component\\Conveter\\Conveter.jsx":"6","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\Pages\\Home.jsx":"7","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\Stores\\Stores.js":"8","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\Dispatcher\\Dispatcher.js":"9","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\Constant\\ConstantLength.js":"10","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\Action\\Actionlength.js":"11","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\Action\\ActionTempreture.js":"12","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\Action\\ActionVolume.js":"13","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\Constant\\ConstantVolume.js":"14","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\Constant\\ConstantTempreture.js":"15","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\component\\Length\\Length.jsx":"16","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\component\\Tempreture\\Tempreture.jsx":"17","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\component\\Volume\\Volume.jsx":"18","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\Service\\Service.js":"19","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\Stores\\lengthStore.js":"20","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\Stores\\VolumeStore.js":"21","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\Dispatcher\\DispatcherLength.js":"22"},{"size":500,"mtime":499162500000,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":656,"mtime":1612161002256,"results":"26","hashOfConfig":"24"},{"size":359,"mtime":1611819331509,"results":"27","hashOfConfig":"24"},{"size":8983,"mtime":1611831863451,"results":"28","hashOfConfig":"24"},{"size":2579,"mtime":1611831955383,"results":"29","hashOfConfig":"24"},{"size":2613,"mtime":1611976231327,"results":"30","hashOfConfig":"24"},{"size":3205,"mtime":1612543542269,"results":"31","hashOfConfig":"24"},{"size":2172,"mtime":1612543280685,"results":"32","hashOfConfig":"24"},{"size":347,"mtime":1612544309056,"results":"33","hashOfConfig":"24"},{"size":13520,"mtime":1612545576374,"results":"34","hashOfConfig":"24"},{"size":2952,"mtime":1612531596369,"results":"35","hashOfConfig":"24"},{"size":2841,"mtime":1612578756757,"results":"36","hashOfConfig":"24"},{"size":278,"mtime":1612578729059,"results":"37","hashOfConfig":"24"},{"size":245,"mtime":1612531359596,"results":"38","hashOfConfig":"24"},{"size":8218,"mtime":1612546743830,"results":"39","hashOfConfig":"24"},{"size":7135,"mtime":1612542787273,"results":"40","hashOfConfig":"24"},{"size":7145,"mtime":1612579353892,"results":"41","hashOfConfig":"24"},{"size":1010,"mtime":1611831184887,"results":"42","hashOfConfig":"24"},{"size":5247,"mtime":1612579513524,"results":"43","hashOfConfig":"24"},{"size":2699,"mtime":1612579486585,"results":"44","hashOfConfig":"24"},{"size":803,"mtime":1612546307017,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"11a122c",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\index.js",[],["101","102"],"C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\reportWebVitals.js",[],"C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\App.js",["103","104"],"import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Routing, Route, Switch } from \"react-router-dom\";\nimport Home from \"./Pages/Home\";\nimport Temperature from \"./component/Tempreture/Tempreture\";\nimport Length from \"./component/Length/Length\";\nimport Volume from \"./component/Volume/Volume\";\nfunction App() {\n  return (\n    <Routing>\n    <div className=\"App\">\n    <Switch>\n          \n          <Route path=\"/temperature\" component={Temperature}/>\n       <Route path=\"/length\" component={Length}/>\n       <Route path=\"/volume\" component={Volume}/>\n        \n      \n    </Switch>\n    </div>\n    </Routing>\n  );\n}\n\nexport default App;\n","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\component\\Toolbar\\Toolbar.jsx",[],["105","106"],"C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\component\\UnitsMaterial\\Unit.jsx",["107","108","109","110"],"// import React from \"react\";\r\n// import \"./Unit.css\";\r\n// import Scale  from \"../../Images&Logo/scale.svg\";\r\n// import  Hot  from \"../../Images&Logo/hot.svg\";\r\n// import  Beaker  from \"../../Images&Logo/beaker.svg\";\r\n// import Card from 'react-bootstrap/Card'\r\n// import LengthAction from \"../../Action/Actionlength\"\r\n// import TempretureAction from \"../../Action/ActionTempreture\"\r\n// import VolumeAction from \"../../Action/ActionVolume\"\r\n\r\n  \r\n// export default class Unit extends React.Component {\r\n//     constructor(props){\r\n//         super(props);\r\n        \r\n\r\n//     }\r\n\r\n//     handleLength(LENGTHTYPES ,LENGTHFROM, LENGTHTO) {\r\n//         LengthAction.kilometreToKiloMetre( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.kilometreToMeter( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.kilometreToCentimetres( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.kilometreToMilimetre( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.kilometreToMicrometre( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.kilometreToMile( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.kilometreToFoot( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.kilometreToInch( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n\r\n//         LengthAction.MetresToKiloMetre( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.MetresToMeter( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.MetresToCentimetres( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.MetresToMilimetre( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.MetresToMicrometre( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.MetresToMile( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.MetresToFoot( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.MetresToInch( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n\r\n//         LengthAction.CentimetresToKiloMetre( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.CentimetresToMeter( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.CentimetresToCentimetres( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.CentimetresToMilimetre( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.CentimetresToMicrometre( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.CentimetresToMile( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.CentimetresToFoot( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.CentimetresToInch( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n\r\n//         LengthAction.MilimetreToKiloMetre( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.MilimetreToMeter( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.MilimetreToCentimetres( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.MilimetreToMilimetre( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.MilimetreToMicrometre( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.MilimetreToMile( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.MilimetreToFoot( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.MilimetreToInch( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n\r\n//         LengthAction.MicrometreToKiloMetre( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.MicrometreToMeter( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.MicrometreToCentimetres( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.MicrometreToMilimetre( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.MicrometreToMicrometre( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.MicrometreToMile( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.MicrometreToFoot( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.MicrometreToInch( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n\r\n//         LengthAction.MileToKiloMetre( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.MileToMeter( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.MileToCentimetres( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.MileToMilimetre( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.MileToMicrometre( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.MileToMile( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.MileToFoot( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.MileToInch( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n\r\n//         LengthAction.FootToKiloMetre( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.FootToMeter( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.FootToCentimetres( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.FootToMilimetre( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.FootToMicrometre( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.FootToMile( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.FootToFoot( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.FootToInch( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n\r\n//         LengthAction.InchToKiloMetre( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.InchToMeter( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.InchToCentimetres( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.InchToMilimetre( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.InchToMicrometre( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.InchToMile( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.InchToFoot( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n//         LengthAction.InchToInch( LENGTHTYPES ,LENGTHFROM, LENGTHTO);\r\n\r\n\r\n//      }\r\n//      handleTempreture(TEMPRETURETYPES ,TEMPRETUREFROM, TEMPRETURETO) {\r\n//         TempretureAction.CelciusToCelcius( TEMPRETURETYPES ,TEMPRETUREFROM, TEMPRETURETO);\r\n//         TempretureAction.CelciusToFahrenheit( TEMPRETURETYPES ,TEMPRETUREFROM, TEMPRETURETO);\r\n//         TempretureAction.CelciusToKelvin( TEMPRETURETYPES ,TEMPRETUREFROM, TEMPRETURETO);\r\n  \r\n//         TempretureAction.FahrenheitToCelcius( TEMPRETURETYPES ,TEMPRETUREFROM, TEMPRETURETO);\r\n//         TempretureAction.FahrenheitToFahrenheit( TEMPRETURETYPES ,TEMPRETUREFROM, TEMPRETURETO);\r\n//         TempretureAction.FahrenheitToKelvin( TEMPRETURETYPES ,TEMPRETUREFROM, TEMPRETURETO);\r\n  \r\n//         TempretureAction.KelvinToCelcius( TEMPRETURETYPES ,TEMPRETUREFROM, TEMPRETURETO);\r\n//         TempretureAction.KelvinToFahrenheit( TEMPRETURETYPES ,TEMPRETUREFROM, TEMPRETURETO);\r\n//         TempretureAction.KelvinToKelvin( TEMPRETURETYPES ,TEMPRETUREFROM, TEMPRETURETO);\r\n//        }\r\n  \r\n     \r\n//        handleVolume(VOLUMETYPES ,VOLUMEFROM, VOLUMETO) {\r\n//         VolumeAction.LitresToLitres( VOLUMETYPES ,VOLUMEFROM, VOLUMETO);\r\n//         VolumeAction.LitresToMililiters( VOLUMETYPES ,VOLUMEFROM, VOLUMETO);\r\n//         VolumeAction.LitresToGallons( VOLUMETYPES ,VOLUMEFROM, VOLUMETO);\r\n  \r\n//         VolumeAction.MililitersToLitres( VOLUMETYPES ,VOLUMEFROM, VOLUMETO);\r\n//         VolumeAction.MililitersToMililiters( VOLUMETYPES ,VOLUMEFROM, VOLUMETO);\r\n//         VolumeAction.MililitersToGallons( VOLUMETYPES ,VOLUMEFROM, VOLUMETO);\r\n  \r\n//         VolumeAction.GallonsToLitres( VOLUMETYPES ,VOLUMEFROM, VOLUMETO);\r\n//         VolumeAction.GallonsToMililiters( VOLUMETYPES ,VOLUMEFROM, VOLUMETO);\r\n//         VolumeAction.GallonsToGallons( VOLUMETYPES ,VOLUMEFROM, VOLUMETO);\r\n//        }\r\n    \r\n\r\n// render(){\r\n//   return (\r\n//     <div className=\"homeContainer\"> \r\n//     <div className=\"chooseType\">\r\n//                         <lable>CHOOSE TYPE</lable>\r\n//                     </div> \r\n//                     <div className=\"converterCard\">\r\n//                         <Card className=\"length\" onChange={this.handleLength}>\r\n//                         <div  >\r\n                    \r\n//                             <img src={Scale} />\r\n//                         </div>\r\n                     \r\n//                         <div>\r\n//                             <lable>Length</lable>\r\n//                         </div>\r\n//                         </Card>\r\n//                         <Card id=\"temperature\" onChange={this.handleTempreture}>\r\n//                         <div>\r\n//                             <img src={Hot}/>\r\n//                         </div>\r\n//                         <div>\r\n//                             <lable>Temperature</lable>\r\n//                         </div>\r\n//                         </Card>\r\n//                         <Card id=\"volumn\" onChange={this.handleVolume}>\r\n//                         <div>\r\n//                             <img src={Beaker}/>\r\n//                         </div>\r\n//                         <div>\r\n//                             <lable>Volumn</lable>\r\n//                         </div>\r\n//                         </Card>\r\n//                     </div>\r\n//                     </div>\r\n//   );\r\n// }\r\n// }","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\component\\Conveter\\Conveter.jsx",["111","112","113"],"import React from \"react\";\r\nimport \"./Conveter.css\";\r\nimport { AppBar, TextField, Select, MenuItem, FormLabel } from '@material-ui/core';\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nimport AppStore from \"../../Stores/Stores\"\r\nimport Unit from \"../UnitsMaterial/Unit\"\r\n// import Action from \"../../Action/Actionlength\"\r\n\r\n\r\n\r\nexport default class Conveter extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n\r\n    }\r\n     getState() {\r\n        this.setState({\r\n             length:AppStore.kilometreToCentimeters()\r\n         })\r\n        \r\n    }\r\n    changelength(event){\r\n        let length=event.target.value\r\nconsole.log(\"length\" ,length)\r\n\r\n\r\n\r\n    }\r\n\r\n    handlelengthSelect(event){\r\n        let lengthSelect=event.target.value\r\n        console.log(\"select\",lengthSelect)\r\n\r\n}\r\n\r\nSelectTo(event){\r\nlet to=event.target.value\r\nconsole.log(\"to\",to)\r\n\r\n\r\n}\r\n     \r\n     render() {\r\n    return (\r\n        <div className=\"calculationContainer\">\r\n            <Card className=\"FromCardContainer\">\r\n                <div id=\"fromLable\">\r\n                    <FormLabel>From </FormLabel>\r\n                </div>\r\n\r\n             \r\n\r\n                <div id=\"From\">\r\n                    <div id=\"inputFrom\">\r\n                        <TextField id=\"TextFieldFrom\" type=\"number\" variant=\"outlined\"  onChange={this.changelength} ></TextField>\r\n                    </div>\r\n                    <div id=\"selectFrom\">\r\n                        <Select id=\"FromDropdown\"  onChange={this.handlelengthSelect}>\r\n                        <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                            <MenuItem >Kilometre</MenuItem>\r\n\r\n                        </Select>\r\n                    </div>\r\n                </div>\r\n\r\n            </Card>\r\n            <Card>\r\n                <div id=\"toLable\">\r\n                    <FormLabel>To</FormLabel>\r\n                </div>\r\n\r\n\r\n\r\n              \r\n          \r\n                <div id=\"To\">\r\n                    <div id=\"inputTo\">\r\n                        <TextField id=\"TextFieldTo\" type=\"number\" variant=\"outlined\" ></TextField>\r\n                    </div>\r\n                    <div id=\"selectTo\">\r\n                        <Select id=\"ToDropdown\" onChange={this.SelectTo}>\r\n                            <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                            <MenuItem value={100}>Kilometre</MenuItem>\r\n\r\n                        </Select>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n        </div>\r\n\r\n    );\r\n        }\r\n            }\r\n        \r\n\r\n","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\Pages\\Home.jsx",["114","115","116"],"// import React from \"react\";\r\n// import Toolbar from \"../component/Toolbar/Toolbar\";\r\n// import Unit from \"../component/UnitsMaterial/Unit\";\r\n// import Conveter from \"../component/Conveter/Conveter\";\r\n// export default function Home() {\r\n//   return (\r\n//     <div className=\"Home\"> \r\n//     <Toolbar/>\r\n//     <Unit/>\r\n//     <Conveter/>\r\n//                     </div>\r\n//   );\r\n// }\r\n\r\nimport React, { Component } from 'react'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport './Home.css';\r\nimport { Card } from '@material-ui/core';\r\nimport scale from \"../Images&Logo/scale.svg\"\r\nimport hot from \"../Images&Logo/hot.svg\"\r\nimport beaker from \"../Images&Logo/beaker.svg\"\r\n\r\n\r\nclass Home extends Component {\r\n    handleLength = () => {\r\n        this.props.history.push('/length')\r\n    }\r\n    handleTemperature = () => {\r\n        this.props.history.push('/temperature');\r\n    }\r\n    handleVolume = () => {\r\n        this.props.history.push('/volume')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <div className=\"homeContainer\">\r\n                    <AppBar id=\"appBar\">\r\n                    <div className=\"homeContainer\">\r\n                        <h2> Welcome To Quantity Measurement</h2>\r\n                        </div>\r\n                    </AppBar>\r\n\r\n                    <div id=\"chooseType\">\r\n                        <h4>CHOOSETYPE</h4>\r\n                    </div>\r\n                    <div className=\"cardContainer\">\r\n\r\n                        <Card id=\"card1\" onClick={this.handleLength}>\r\n                            <div>\r\n                                <img src={scale} />\r\n                            </div>\r\n                            <div>\r\n                                Length\r\n                            </div>\r\n                        </Card>\r\n                        <Card className=\"card2\" onClick={this.handleTemperature}>\r\n                            <div>\r\n                                <img src={hot} />\r\n                            </div>\r\n                            <div>\r\n                                Temperature\r\n                            </div>\r\n                        </Card>\r\n                        <Card id=\"card3\" onClick={this.handleVolume}>\r\n                            <div>\r\n                                <img src={beaker} />\r\n                            </div>\r\n                            <div>\r\n                                Volume\r\n                            </div>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Home;","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\Stores\\Stores.js",["117","118"],"import EventEmitter from 'events';\r\nimport  Dispatcher from \"../Dispatcher/Dispatcher\"\r\n\r\n\r\nclass Store extends EventEmitter  { \r\n\r\n  constructor(){ \r\n    super();\r\n\r\n    \r\n    this.TempFrom=[];\r\n    this.TempData=[];\r\n    this.TempTo=[]\r\n    // this.data={ \r\n    //   setFromTemperature: '',\r\n    //   setToTemperature: '',\r\n    //  setFromTemperatureText:'',\r\n     \r\n    \r\n    //  result: \"\"\r\n    // }\r\n\r\n\r\n    \r\n  }\r\n  \r\n\r\n    getAllData() {\r\n    return this.TempData\r\n\r\n    \r\n  } \r\n  getAllFrom() {\r\n    return this.TempFrom\r\n    \r\n  } \r\n  getAllTo() {\r\n    return this.TempTo\r\n    \r\n  } \r\n\r\n  // updateData(obj) {\r\n  //   this.data = obj;\r\n\r\n  //   console.log(obj);\r\n\r\n  //   this.emit(\"change\");\r\n  // }\r\n\r\n \r\n//   handleActions = action => { \r\n//     console.log(action);\r\n\r\n//     switch (action.type) { \r\n//       case \"ADD_TEMP\":\r\n//         this.updateData({\r\n//           // ...this.data,\r\n//           setFromTemperatureText: action.amt,\r\n        \r\n//         });\r\n//         break;\r\n//         case \"ADD_From_TEMP_TYPE\":\r\n//         this.updateData({\r\n//           // ...this.data,\r\n//           setFromTemperature: action.fromType,\r\n        \r\n//         });\r\n//         break;\r\n      \r\n//         case \"ADD_To_TEMP_TYPE\":\r\n//             this.updateData({\r\n//               // ...this.data,\r\n//               setToTemperature: action.toType,\r\n            \r\n//             });\r\n//             break;\r\n//   };\r\n// }\r\n\r\n\r\nUpdateTemp(amt) {\r\n  this.TempData.push(amt);\r\n  console.log(amt)\r\n  this.change();\r\n}\r\n\r\nUpdateFromTempType(fromType) {\r\n  this.TempFrom.push(fromType);\r\n  console.log(fromType)\r\n  this.change();\r\n}\r\n\r\nUpdateToTempType(toType) {\r\n  this.TempData.push(toType);\r\n  console.log(toType)\r\n  this.change();\r\n}\r\n\r\nchange() {\r\n  this.emit('TempTo');\r\n  this.emit('TempFrom');\r\n  this.emit('TempTo');\r\n  \r\n\r\n}\r\naddListener(TempTo, callback) {\r\n  this.on(TempTo, callback);\r\n}\r\n\r\nremoveListener(TempTo, callback) {\r\n  this.removeListener(TempTo, callback);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  quantityConversion(input, options) {\r\n    console.log(\"input\", input);\r\n    console.log(\"options\", options);\r\n    switch (options) {\r\n    \r\n      case \"FahrenheitFahrenheit\":\r\n        return input;\r\n\r\n      case \"FahrenheitCelsius\":\r\n        return ((input - 32) * 5) / 9;\r\n\r\n      case \"FahrenheitKelvin\":\r\n        return ((input - 32) * 5) / 9 + 273.15;\r\n\r\n      case \"CelsiusCelsius\":\r\n        return input;\r\n\r\n      case \"CelsiusFahrenheit\":\r\n        return (input * 9) / 5 + 32;\r\n\r\n      case \"CelsiusKelvin\":\r\n        return input + 273.15;\r\n\r\n      case \"KelvinKelvin\":\r\n        return input;\r\n\r\n      case \"KelvinFahrenheit\":\r\n        return ((input - 273) * 9) / 5 + 32;\r\n\r\n      case \"KelvinCelcius\":\r\n        return input - 273;\r\n\r\n  \r\n    }\r\n  }\r\n\r\n\r\n\r\n//   Change() {\r\n//     this.emit('change');\r\n//   }\r\n\r\n//   addChangeListener(callback) {\r\n//     this.on('change', callback);\r\n//   }\r\n\r\n//   removeChangeListener(callback) {\r\n//     this.removeListener('change', callback);\r\n//   }\r\n}\r\n\r\n// const fluxStore = new Store();\r\n// Dispatcher.register(fluxStore.handleActions.bind(fluxStore));\r\n// window.fluxStore = fluxStore;\r\n// window.Dispatcher = Dispatcher;\r\n\r\nexport default new Store(); ","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\Dispatcher\\Dispatcher.js",[],"C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\Constant\\ConstantLength.js",["119"],"export default  {\r\n    LENGTH:\"LEBGTH\",\r\n\r\nKILOMETER : \"KILOMETER\",\r\n\r\nMETERS :\"METERS\",\r\n\r\nCENTIMETERS:\"CENTIMETERS\",\r\n\r\nMILIMETRE :\"MILIMETRE\",\r\n\r\nMICROMETRE:\"MICROMETRE\",\r\n\r\nMILE:\"MILE\",\r\n\r\nFOOT:\"FOOT\",\r\n\r\nINCH:\"INCH\",\r\n\r\nADD_LENGTH:\"ADD_LENGTH\",\r\n\r\nADD_From_LENGTH_TYPE:\"ADD_From_LENGTH_TYPE\",\r\n\r\nADD_To_LENGTH_TYPE:\"ADD_To_LENGTH_TYPE\"\r\n\r\n}\r\n","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\Action\\Actionlength.js",[],"C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\Action\\ActionTempreture.js",[],"C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\Action\\ActionVolume.js",[],"C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\Constant\\ConstantVolume.js",["120"],"C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\Constant\\ConstantTempreture.js",["121"],"export default  {\r\n\r\n   CELSIUS : \"CELSIUS\",\r\n    \r\n    FAHRENHEIT :\"FAHRENHEIT\",\r\n    \r\n    KELVIN:\"KELVIN\",\r\n    \r\n    ADD_TEMP:\"ADD_TEMP\",\r\n\r\n    ADD_From_TEMP_TYPE:\"ADD_From_TEMP_TYPE\",\r\n\r\n    ADD_To_TEMP_TYPE:\"ADD_To_TEMP_TYPE\"\r\n    \r\n    }","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\component\\Length\\Length.jsx",["122","123","124","125","126","127","128"],"import React, { Component } from 'react'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport './Length.css';\r\nimport { Card } from '@material-ui/core';\r\nimport scale from \"../../Images&Logo/scale.svg\"\r\nimport hot from \"../../Images&Logo/hot.svg\"\r\nimport beaker from \"../../Images&Logo/beaker.svg\"\r\nimport { TextField, MenuItem, Select } from '@material-ui/core';\r\nimport LengthConvertor from '../../Stores/lengthStore';\r\nimport * as LengthAction from \"../../Action/Actionlength\"\r\n\r\n//let objLength=new LengthConvertor();\r\nconst length = [\r\n    {\r\n      value: \"Metres\",\r\n      label: \"Metres\",\r\n    },\r\n    {\r\n      value: \"Kilometre\",\r\n      label: \"Kilometre\",\r\n    },\r\n    {\r\n      value: \"Centimetre\",\r\n      label: \"Centimetre\",\r\n    },\r\n    {\r\n      value: \"Milimetre\",\r\n      label: \"Milimetre\",\r\n    },\r\n    {\r\n      value: \"Micrometre\",\r\n      label: \"Micrometre\",\r\n    },\r\n    {\r\n      value: \"Mile\",\r\n      label: \"Mile\",\r\n    },\r\n    {\r\n      value: \"Foot\",\r\n      label: \"Foot\",\r\n    },\r\n    {\r\n      value: \"Inch\",\r\n      label: \"Inch\",\r\n    },\r\n  ];\r\n\r\nexport default class Length extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n       // this.state = LengthConvertor.getAll();\r\n       this.state = { setFromLengthText: LengthConvertor.getAllData() ,\r\n        setFromLength :LengthConvertor.getAllFrom() ,\r\n        setToLength :LengthConvertor.getAllTo() ,\r\n        finalResult: \"\"\r\n};\r\nthis.onListChange = this.onListChange.bind(this);\r\n}\r\n        // this.state = {\r\n        //     finalResult: \"\",\r\n        //     defaultvalue:\"CM\"\r\n        //     // setFromLength: '',\r\n        //     // setToLength: '',\r\n        //     // setFromLengthText:'',\r\n        //     // result:\"\",\r\n        //     // defaultValue1:\"0\",\r\n        //     // defaultValue2:\"0\",\r\n        //     // defaultName1:\"CM\",\r\n        //     // defaultName2:\"KM\",\r\n        //     // items: LengthConvertor.getAll()\r\n        // }\r\n\r\n\r\n\r\n        componentDidMount() {\r\n            LengthConvertor.addListener('length', this.onListChange);\r\n            LengthConvertor.addListener('lengthFrom', this.onListChange);\r\n            LengthConvertor.addListener('lengthTo', this.onListChange);\r\n          }\r\n        \r\n          componentWillUnmount() {\r\n            LengthConvertor.removeListener('length', this.onListChange);\r\n            LengthConvertor.removeListener('lengthFrom', this.onListChange);\r\n            LengthConvertor.removeListener('lengthTo', this.onListChange);\r\n          }\r\n        \r\n          onListChange() {\r\n            this.setState({\r\n                setFromLengthText: LengthConvertor.getAllData(),\r\n                setFromLength: LengthConvertor.getAllFrom(),\r\n                setToLength:LengthConvertor.getAllTo(),\r\n    \r\n            });\r\n          }\r\n      \r\n    handleChangeFrom = (event) => {\r\n        \r\n     LengthAction.UpdateFromLengthType(event.target.value);\r\n     this.state.setFromLength=event.target.value\r\n     this.result = LengthConvertor.quantityConversion(this.state.setFromLengthText,this.state.setFromLength+this.state.setToLength)\r\n     this.setState({\r\n        finalResult: this.result\r\n    })\r\n    // this.setState({\r\n        //     setFromLength: event.target.value\r\n        // })\r\n        \r\n        //this.state.setFromLength=event.target.value;\r\n        // this.result=LengthConvertor.calculatelength(this.state.setFromLengthText,this.state.setFromLength,this.state.setToLength)\r\n    };\r\n    \r\n\r\n    \r\n    handleChangeTo = (event) => { \r\n        \r\n        LengthAction.UpdateToLengthType(event.target.value);\r\n        this.state.setToLength=event.target.value;\r\n        this.result = LengthConvertor.quantityConversion(this.state.setFromLengthText,this.state.setFromLength+this.state.setToLength)\r\n        this.setState({ \r\n            finalResult: this.result\r\n        })\r\n        // this.setState({\r\n        //     setToLength: event.target.value\r\n        // })\r\n       // this.state.setToLength=event.target.value;\r\n        // this.result=LengthConvertor.calculatelength(this.state.setFromLengthText,this.state.setFromLength,this.state.setToLength)\r\n    };\r\n    textChange=(event)=>{ \r\n        \r\n        LengthAction.UpdateLength(event.target.value);\r\n        this.state.setFromLengthText=event.target.value;\r\n        this.result = LengthConvertor.quantityConversion(this.state.setFromLengthText,this.state.setFromLength+this.state.setToLength)\r\n        this.setState({\r\n            finalResult: this.result\r\n        })\r\n        // this.setState({\r\n        //     setFromLengthText: event.target.value\r\n        // })\r\n        // this.state.setFromLengthText=event.target.value;\r\n        // this.result=LengthConvertor.calculatelength(this.state.setFromLengthText,this.state.setFromLength,this.state.setToLength)\r\n    };\r\n\r\n    handleLength = () => {\r\n        this.props.history.push('/length');\r\n    }\r\n    handleTemperature = () => {\r\n        this.props.history.push('/temperature');\r\n    }\r\n    handleVolume = () => {\r\n        this.props.history.push('/volume');\r\n    }\r\n    render() {\r\n        console.log(\"Length Data\",this.state);\r\n        console.log(\"Length Result\",this.state.finalResul);\r\n        return (\r\n            <div className=\"homeContainer\">\r\n                <AppBar id=\"appBar\">\r\n                    <h2> Welcome To Quantity Measurement</h2>\r\n                </AppBar>\r\n                <div id=\"chooseType\">\r\n                    <h4>CHOOSETYPE</h4>\r\n                </div>\r\n                <div className=\"cardContainer\">\r\n\r\n                    <Card id=\"length\"onClick={this.handleLength}>\r\n                        <div>\r\n                            <img src={scale} />\r\n                        </div>\r\n                        <div>\r\n                            Length\r\n                                </div>\r\n                    </Card>\r\n                    <Card id=\"temperatures\"onClick={this.handleTemperature}>\r\n                        <div>\r\n                            <img src={hot} />\r\n                        </div>\r\n                        <div>\r\n                            Temperature\r\n                                </div>\r\n                    </Card>\r\n                    <Card id=\"volumes\"onClick={this.handleVolume}>\r\n                        <div>\r\n                            <img src={beaker} />\r\n                        </div>\r\n                        <div>\r\n                            Volume\r\n                                </div>\r\n                    </Card>\r\n                </div>\r\n                <div id=\"containerForData\">\r\n                    <div>\r\n                        <div id=\"text\">\r\n                            <br /><lable>FROM</lable><br /></div>\r\n                        <div>\r\n                            <TextField className=\"TextField\" type=\"number\" variant=\"outlined\" size=\"small\"  onChange={this.textChange}  defaultValue=\"0\"></TextField>\r\n                        </div>\r\n                        <div>\r\n                            <Select id=\"Select\" name='defaultValue1'  onChange={this.handleChangeFrom} defaultValue=\"KM\" >\r\n                            \r\n                            {length.map((option) => (\r\n                                    <option value={option.value}>{option.label}</option>\r\n                                ))}\r\n                            </Select>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div id=\"text\">\r\n                            <br /><lable>To</lable><br /></div>\r\n                        <div>\r\n                            <TextField className=\"TextField\" type=\"number\" variant=\"outlined\" size=\"small\"  defaultValue=\"0\" value={this.state.finalResult} onChange={this.textChange} ></TextField>  </div>\r\n                        <div>\r\n                            <Select id=\"Select\"  onChange={this.handleChangeTo}  value={this.defaultvalue}>\r\n\r\n                            {length.map((option) => (\r\n                                    <option value={option.value}>{option.label}</option>\r\n                                ))}\r\n                            </Select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\component\\Tempreture\\Tempreture.jsx",["129","130","131","132","133","134","135"],"import React, { Component } from 'react'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport './Tempreture.css';\r\nimport { Card } from '@material-ui/core';\r\nimport scale from \"../../Images&Logo/scale.svg\"\r\nimport hot from \"../../Images&Logo/hot.svg\"\r\nimport beaker from \"../../Images&Logo/beaker.svg\"\r\nimport { TextField, MenuItem, Select } from '@material-ui/core';\r\nimport TemperatureConvertor from '../../Stores/Stores';\r\nimport * as TempretureAction from \"../../Action/ActionTempreture\"\r\n\r\n\r\nconst temperature = [\r\n    {\r\n        value: \"Celsius\",\r\n        label: \"Celsius\",\r\n    },\r\n    {\r\n        value: \"Fahrenheit\",\r\n        label: \"Fahrenheit\",\r\n    },\r\n    {\r\n        value: \"Kelvin\",\r\n        label: \"Kelvin\",\r\n    },\r\n];\r\n\r\n\r\nexport default class Temprature extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //this.state = TemperatureConvertor.getAll();\r\n        this.state = { setFromTemperatureText: TemperatureConvertor.getAllData() ,\r\n                       setFromTemperature :TemperatureConvertor.getAllFrom() ,\r\n                       setToTemperature :TemperatureConvertor.getAllTo() ,\r\n                       finalResult: \"\"\r\n        };\r\n        this.onListChange = this.onListChange.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        TemperatureConvertor.addListener('Temp', this.onListChange);\r\n        TemperatureConvertor.addListener('TempFrom', this.onListChange);\r\n        TemperatureConvertor.addListener('TempTo', this.onListChange);\r\n      }\r\n    \r\n      componentWillUnmount() {\r\n        TemperatureConvertor.removeListener('Temp', this.onListChange);\r\n        TemperatureConvertor.removeListener('TempFrom', this.onListChange);\r\n        TemperatureConvertor.removeListener('TempTo', this.onListChange);\r\n      }\r\n    \r\n      onListChange() {\r\n        this.setState({\r\n            setFromTemperatureText: TemperatureConvertor.getAllData(),\r\n            setFromTemperature: TemperatureConvertor.getAllFrom(),\r\n            setToTemperature:TemperatureConvertor.getAllTo(),\r\n\r\n        });\r\n      }\r\n\r\n\r\n    handleChangeFroms = (event) => {\r\n\r\n        TempretureAction.UpdateFromTempType(event.target.value);\r\n        this.state.setFromTemperature = event.target.value;\r\n        this.result = TemperatureConvertor.quantityConversion(this.state.setFromTemperatureText, (this.state.setFromTemperature + this.state.setToTemperature))\r\n        this.setState({\r\n            finalResult: this.result\r\n        })\r\n        // this.setState({\r\n        //     setFromTemperature: event.target.value\r\n        // })\r\n        //  this.state.setFromTemperature=event.target.value;\r\n    };\r\n\r\n    handleChangeToo = (event) => {\r\n\r\n        TempretureAction.UpdateToTempType(event.target.value);\r\n        this.state.setToTemperature = event.target.value;\r\n        this.result = TemperatureConvertor.quantityConversion(this.state.setFromTemperatureText,( this.state.setFromTemperature + this.state.setToTemperature))\r\n        this.setState({\r\n            finalResult: this.result\r\n        })\r\n        // this.setState({\r\n        //     setToTemperature: event.target.value\r\n        // })\r\n        // this.state.setToTemperature = event.target.value;\r\n        console.log(\"final Result : \", this.state.finalResult)\r\n    };\r\n\r\n\r\n\r\n    textChanges = (event) => {\r\n\r\n        TempretureAction.UpdateTemp(event.target.value)\r\n        this.state.setFromTemperatureText = event.target.value;\r\n        this.result = TemperatureConvertor.quantityConversion(this.state.setFromTemperatureText,( this.state.setFromTemperature + this.state.setToTemperature))\r\n        this.setState({\r\n            finalResult: this.result\r\n        })\r\n        // this.setState({\r\n        //     setFromTemperatureText: event.target.value\r\n        // })\r\n    };\r\n\r\n    handleLength = () => {\r\n        this.props.history.push('/length');\r\n    }\r\n    handleTemperature = () => {\r\n        this.props.history.push('/temperature');\r\n    }\r\n    handleVolume = () => {\r\n        this.props.history.push('/volume');\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        console.log(\"shubham\", this.state);\r\n        return (\r\n            // <div className=\"helloTemperature\">Hello Temperatures</div>\r\n            <div className=\"homeContainer\">\r\n                <AppBar id=\"appBar\">\r\n                    <h2> Welcome To Quantity Measurement</h2>\r\n                </AppBar>\r\n                <div id=\"chooseType\">\r\n                    <h4>CHOOSETYPE</h4>\r\n                </div>\r\n                <div className=\"cardContainer\">\r\n\r\n                    <Card id=\"lengths\" onClick={this.handleLength}>\r\n                        <div>\r\n                            <img src={scale} />\r\n                        </div>\r\n                        <div>\r\n                            Length\r\n                            </div>\r\n                    </Card>\r\n                    <Card id=\"temperature\" onClick={this.handleTemperature}>\r\n                        <div>\r\n                            <img src={hot} />\r\n                        </div>\r\n                        <div>\r\n                            Temperature\r\n                            </div>\r\n                    </Card>\r\n                    <Card id=\"volumes\" onClick={this.handleVolume}>\r\n                        <div>\r\n                            <img src={beaker} />\r\n                        </div>\r\n                        <div>\r\n                            Volume\r\n                            </div>\r\n                    </Card>\r\n                </div>\r\n                <div id=\"containerForData\">\r\n                    <div>\r\n                        <div id=\"text\">\r\n                            <br /><lable>FROM</lable><br /></div>\r\n                        <div>\r\n                            <TextField className=\"TextField\" type=\"number\" variant=\"outlined\" size=\"small\" onChange={this.textChanges} defaultValue=\"0\"  ></TextField>\r\n                        </div>\r\n                        <div>\r\n                            <Select id=\"Select\" onChange={this.handleChangeFroms} defaultValue=\"shubham\"  >\r\n                                {temperature.map((option) => (\r\n                                    <option value={option.value}>{option.label}</option>\r\n                                ))}\r\n                            </Select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div id=\"text\">\r\n                            <br /><lable>To</lable><br /></div>\r\n                        <div>\r\n                            <TextField className=\"TextField\" type=\"number\" variant=\"outlined\" size=\"small\" value={this.state.finalResult} ></TextField></div>\r\n                        <div>\r\n\r\n                            <Select id=\"Select\" onChange={this.handleChangeToo}  > \r\n                                {temperature.map((option) => (\r\n                                    <option value={option.value}>{option.label}</option>\r\n                                ))}\r\n\r\n                            </Select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\component\\Volume\\Volume.jsx",["136","137","138","139","140","141","142"],"C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\Service\\Service.js",["143"],"C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\Stores\\lengthStore.js",["144","145"],"C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\Stores\\VolumeStore.js",["146","147"],"C:\\Users\\sai\\fellowship\\quantity-measurement-react\\src\\Dispatcher\\DispatcherLength.js",[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":1,"column":8,"nodeType":"154","messageId":"155","endLine":1,"endColumn":12},{"ruleId":"152","severity":1,"message":"156","line":4,"column":8,"nodeType":"154","messageId":"155","endLine":4,"endColumn":12},{"ruleId":"148","replacedBy":"157"},{"ruleId":"150","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":13,"column":5,"nodeType":"161","messageId":"162","endLine":17,"endColumn":6},{"ruleId":"163","severity":1,"message":"164","line":134,"column":29,"nodeType":"165","endLine":134,"endColumn":48},{"ruleId":"163","severity":1,"message":"164","line":143,"column":29,"nodeType":"165","endLine":143,"endColumn":45},{"ruleId":"163","severity":1,"message":"164","line":151,"column":29,"nodeType":"165","endLine":151,"endColumn":48},{"ruleId":"152","severity":1,"message":"166","line":3,"column":10,"nodeType":"154","messageId":"155","endLine":3,"endColumn":16},{"ruleId":"152","severity":1,"message":"167","line":7,"column":8,"nodeType":"154","messageId":"155","endLine":7,"endColumn":12},{"ruleId":"159","severity":1,"message":"160","line":13,"column":5,"nodeType":"161","messageId":"162","endLine":17,"endColumn":6},{"ruleId":"163","severity":1,"message":"164","line":52,"column":33,"nodeType":"165","endLine":52,"endColumn":52},{"ruleId":"163","severity":1,"message":"164","line":60,"column":33,"nodeType":"165","endLine":60,"endColumn":50},{"ruleId":"163","severity":1,"message":"164","line":68,"column":33,"nodeType":"165","endLine":68,"endColumn":53},{"ruleId":"152","severity":1,"message":"168","line":2,"column":9,"nodeType":"154","messageId":"155","endLine":2,"endColumn":19},{"ruleId":"169","severity":1,"message":"170","line":121,"column":5,"nodeType":"171","messageId":"172","endLine":151,"endColumn":6},{"ruleId":"173","severity":1,"message":"174","line":1,"column":1,"nodeType":"175","endLine":26,"endColumn":2},{"ruleId":"173","severity":1,"message":"174","line":1,"column":1,"nodeType":"175","endLine":17,"endColumn":7},{"ruleId":"173","severity":1,"message":"174","line":1,"column":1,"nodeType":"175","endLine":15,"endColumn":6},{"ruleId":"152","severity":1,"message":"176","line":8,"column":21,"nodeType":"154","messageId":"155","endLine":8,"endColumn":29},{"ruleId":"177","severity":1,"message":"178","line":99,"column":6,"nodeType":"179","endLine":99,"endColumn":16},{"ruleId":"177","severity":1,"message":"178","line":117,"column":9,"nodeType":"179","endLine":117,"endColumn":19},{"ruleId":"177","severity":1,"message":"178","line":131,"column":9,"nodeType":"179","endLine":131,"endColumn":19},{"ruleId":"163","severity":1,"message":"164","line":167,"column":29,"nodeType":"165","endLine":167,"endColumn":48},{"ruleId":"163","severity":1,"message":"164","line":175,"column":29,"nodeType":"165","endLine":175,"endColumn":46},{"ruleId":"163","severity":1,"message":"164","line":183,"column":29,"nodeType":"165","endLine":183,"endColumn":49},{"ruleId":"152","severity":1,"message":"176","line":8,"column":21,"nodeType":"154","messageId":"155","endLine":8,"endColumn":29},{"ruleId":"177","severity":1,"message":"178","line":67,"column":9,"nodeType":"179","endLine":67,"endColumn":19},{"ruleId":"177","severity":1,"message":"178","line":81,"column":9,"nodeType":"179","endLine":81,"endColumn":19},{"ruleId":"177","severity":1,"message":"178","line":98,"column":9,"nodeType":"179","endLine":98,"endColumn":19},{"ruleId":"163","severity":1,"message":"164","line":135,"column":29,"nodeType":"165","endLine":135,"endColumn":48},{"ruleId":"163","severity":1,"message":"164","line":143,"column":29,"nodeType":"165","endLine":143,"endColumn":46},{"ruleId":"163","severity":1,"message":"164","line":151,"column":29,"nodeType":"165","endLine":151,"endColumn":49},{"ruleId":"152","severity":1,"message":"176","line":8,"column":21,"nodeType":"154","messageId":"155","endLine":8,"endColumn":29},{"ruleId":"177","severity":1,"message":"178","line":77,"column":9,"nodeType":"179","endLine":77,"endColumn":19},{"ruleId":"177","severity":1,"message":"178","line":90,"column":9,"nodeType":"179","endLine":90,"endColumn":19},{"ruleId":"177","severity":1,"message":"178","line":103,"column":9,"nodeType":"179","endLine":103,"endColumn":19},{"ruleId":"163","severity":1,"message":"164","line":136,"column":29,"nodeType":"165","endLine":136,"endColumn":48},{"ruleId":"163","severity":1,"message":"164","line":144,"column":29,"nodeType":"165","endLine":144,"endColumn":46},{"ruleId":"163","severity":1,"message":"164","line":152,"column":29,"nodeType":"165","endLine":152,"endColumn":49},{"ruleId":"152","severity":1,"message":"180","line":6,"column":11,"nodeType":"154","messageId":"155","endLine":6,"endColumn":17},{"ruleId":"152","severity":1,"message":"181","line":2,"column":9,"nodeType":"154","messageId":"155","endLine":2,"endColumn":20},{"ruleId":"169","severity":1,"message":"170","line":124,"column":3,"nodeType":"171","messageId":"172","endLine":261,"endColumn":4},{"ruleId":"152","severity":1,"message":"182","line":2,"column":9,"nodeType":"154","messageId":"155","endLine":2,"endColumn":21},{"ruleId":"169","severity":1,"message":"170","line":116,"column":7,"nodeType":"171","messageId":"172","endLine":143,"endColumn":4},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.",["183"],["184"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'AppBar' is defined but never used.","'Unit' is defined but never used.","'Dispatcher' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'MenuItem' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'inches' is assigned a value but never used.","'Dispatchers' is defined but never used.","'Dispatcherss' is defined but never used.","no-global-assign","no-unsafe-negation"]